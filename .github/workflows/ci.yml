name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    permissions:
      checks: write # Needed for publishing test results
      contents: write # Needed for tagging with the released version
      pull-requests: write # Needed for publishing test results

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: build
        id: build
        shell: pwsh
        run: |
          $build = ./build.ps1
          $build

          $moduleName = $build[1].Name
          echo "::set-output name=moduleName::$moduleName"

          $moduleVersion = $build[1].ModuleBase | Split-Path -Leaf
          echo "::set-output name=moduleVersion::$moduleVersion"

      - name: Output Tag Info
        shell: pwsh
        run: |
          Write-Host "${{ steps.build.outputs.moduleName }} current commit will be tagged with ${{ steps.build.outputs.moduleVersion }} on a successful publish."

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/windows@v2
        if: always()
        with:
          files: tests/testResults.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
          dotnet-quality: 'ga'

      - name: ReportGenerator
        # https://reportgenerator.io/usage
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.0
        with:
          reports: tests/coverage.xml
          targetdir: tests/coverage
          reporttypes: Cobertura
          sourcedirs: src

      - name: Publish Code Coverage
        uses: 5monkeys/cobertura-action@v14
        if: github.event_name == 'pull_request'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          path: tests/coverage/Cobertura.xml
          minimum_coverage: 75
          fail_below_threshold: false
          only_changed_files: true

      - name: publish
        id: publish
        if: success() && github.ref == 'refs/heads/main'
        shell: pwsh
        run: |
          ./publish.ps1
        env:
          PSGALLERYAPIKEY: ${{ secrets.PSGALLERYAPIKEY }}

      - name: Tag commit
        if: steps.publish.outcome == 'success' && github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo
            const tag = `${{ steps.build.outputs.moduleVersion }}`
            await github.rest.git.createRef({
              owner,
              repo,
              ref: `refs/tags/${tag}`,
              sha: context.sha
            })